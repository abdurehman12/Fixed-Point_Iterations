# -*- coding: utf-8 -*-
"""Fixed Point Iteration.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QwqSxywGSKgD7Aw5hQE4su93V4aOHc1R
"""

from math import exp as e
from math import cos as cos
import math
from sympy import *
from math import *
from __future__ import division
from sympy import *
import matplotlib.pyplot as plt
import numpy as np
import time


'''In this part of the code we are taking the initial guess, tolerance and our function as input.
And also calculating the corresponding g(x) of our function.'''
start_time = time.time()
initial_guess= input("enter initial guess: ")
tolerence = input("Enter tolerence value: ")
fx = '(exp(x) + 2**-x+ 2*cos(x) - 6)'
#fx = input("Enter a polynomial: ")
gx = '(log(6-2**-x - 2*cos(x)))'
g = lambda x: eval(gx)
f= lambda x: eval(fx)
x=Symbol('x')
f1=(g(float(initial_guess)))
print(g(float(initial_guess)))
x=symbols('x')
print(f1)
tol=float(eval(tolerence))
counter=0
y_values=f(float(initial_guess))
values = [float(initial_guess)]
correspoing_y= [y_values]

while abs((float(f1) - float(initial_guess))/float(initial_guess)) >= tol:
  if counter>0:
    initial_guess=f1
  f1=g(float(initial_guess))
  y_values=f(float(f1))
  values.append(f1)
  correspoing_y.append(y_values)
  print("px  = " + str(f1))
  counter+=1


'''In this part of the code we are printing the graph of our values in the specified domain.
For this Question that is [1,2] '''
t=[1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2]
graphing_values=[]
for value in t:
  graphing_values.append(f(float(value)))
print(t)
print(graphing_values)
x_points=np.array(values)
y_points = np.array(correspoing_y)
plt.figure
plt.plot(t,graphing_values,marker="^")
plt.title("Fixed Point Method Iterations")
plt.xlabel("P values")
plt.ylabel("F(x)")
plt.show()


'''In this part of the code all our P values and its corresponding f(x) values 
are being store in a txt file.'''

file2 = open("Fixed Point Method.txt","w")
file2.write("Number of iteration                 " + "Roots Approximation                                                           " +"   F(x)                                       " + "  Convergence" + "\n"  )
for i in range(len(values)-1):
  file2.write(str(i) +"                                    ")
  file2.write(  str(values[i]) +"                                                             " )
  file2.write(str(correspoing_y[i])+  "                   " )
  file2.write(str(abs((values[i+1]-values[-1])/(math.pow((values[i]-values[-1]),1))))+ "\n")
file2.write("The total number of iterations needed are " + str(len(values)-1) + "\n")
file2.write("The root is " + str(values[-1]))

'''In this part of the code we are printing our root, our number of iterations needed
to reach the root and our convergance CPU time.'''
print("The root is " + str(float(initial_guess)))
print("number of iterations are " +str(counter))
print("--- %s seconds --- is the convergence time" % (time.time() - start_time))

